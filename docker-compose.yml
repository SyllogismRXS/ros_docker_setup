services:
  dev:
    build:
        context: ../workspace
        dockerfile: ../ros_docker_setup/Dockerfile
        args:
          ROS_DISTRO: ${ROS_DISTRO}
          USER_ID: ${USER_ID:-0}
          GROUP_ID: ${GROUP_ID:-0}
    image: syllo/ros:${ROS_DISTRO}
    container_name: ros_${ROS_DISTRO}
    network_mode: "host"           # access to host's network
    stdin_open: true               # docker run -i
    tty: true                      # docker run -t
    privileged: true               # Needed for /dev volume
    environment:
      - DISPLAY=${DISPLAY}             # Pass the display for GUI
      - QT_X11_NO_MITSHM=1             # Needed by QT programs
      - XAUTHORITY=/tmp/.docker.xauth
      - TERM=xterm-256color            # Enable terminal colors
    volumes:
       - /tmp/.X11-unix:/tmp/.X11-unix:rw
       - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
       - ../workspace/src:/home/ros/workspace/src
       - ../data:/home/ros/data
       - /dev:/dev  # Needed for sensors


  dev-nvidia:
    image: syllo/ros:${ROS_DISTRO}
    container_name: ros_${ROS_DISTRO}_nvidia
    network_mode: "host"           # access to host's network
    stdin_open: true               # docker run -i
    tty: true                      # docker run -t
    privileged: true               # Needed for /dev volume
    runtime: nvidia
    environment:
      - DISPLAY=${DISPLAY}             # Pass the display for GUI
      - QT_X11_NO_MITSHM=1             # Needed by QT programs
      - XAUTHORITY=/tmp/.docker.xauth
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - TERM=xterm-256color            # Enable terminal colors
    volumes:
       - /tmp/.X11-unix:/tmp/.X11-unix:rw
       - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
       - ../workspace/src:/home/ros/workspace/src
       - ../data:/home/ros/data
       - /dev:/dev  # Needed for sensors
